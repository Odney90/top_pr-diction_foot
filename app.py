import streamlit as st
import pandas as pd
import joblib
import os

# Charger la liste des √©quipes
EQUIPES = ["PSG", "Marseille", "Lyon", "Monaco", "Lille", "Rennes", "Nice", "Bordeaux"]

# Charger les mod√®les
MODEL_PATH = "../models"
CLASSIFIER_MODEL = os.path.join(MODEL_PATH, "RandomForest_classifier.pkl")
REGRESSOR_TEAM1_MODEL = os.path.join(MODEL_PATH, "RandomForest_regressor_team1.pkl")
REGRESSOR_TEAM2_MODEL = os.path.join(MODEL_PATH, "RandomForest_regressor_team2.pkl")

# V√©rifier que les mod√®les existent
if os.path.exists(CLASSIFIER_MODEL):
    classifier = joblib.load(CLASSIFIER_MODEL)
if os.path.exists(REGRESSOR_TEAM1_MODEL):
    regressor_team1 = joblib.load(REGRESSOR_TEAM1_MODEL)
if os.path.exists(REGRESSOR_TEAM2_MODEL):
    regressor_team2 = joblib.load(REGRESSOR_TEAM2_MODEL)

# Interface utilisateur
st.title("üîÆ Pr√©diction de Match de Football")

# S√©lection des √©quipes
col1, col2 = st.columns(2)
with col1:
    equipe1 = st.selectbox("S√©lectionnez l'√©quipe qui re√ßoit", EQUIPES, key="equipe1")
with col2:
    equipe2 = st.selectbox("S√©lectionnez l'√©quipe en d√©placement", [e for e in EQUIPES if e != equipe1], key="equipe2")

# Entr√©e des statistiques
st.subheader("üìä Entrez les statistiques manuellement (optionnel)")

# Variables g√©n√©rales
st.markdown("### üìå Variables G√©n√©rales")
classement_1 = st.number_input("Classement √©quipe qui re√ßoit", min_value=1, max_value=20, step=1)
classement_2 = st.number_input("Classement √©quipe en d√©placement", min_value=1, max_value=20, step=1)
points_1 = st.number_input("Points √©quipe qui re√ßoit", min_value=0, max_value=100, step=1)
points_2 = st.number_input("Points √©quipe en d√©placement", min_value=0, max_value=100, step=1)
h2h = st.number_input("Historique des confrontations (H2H, % de victoires √† domicile)", min_value=0, max_value=100, step=1)

# Performance √† domicile
st.markdown("### üè† Performance √† domicile (√âquipe qui re√ßoit)")
buts_domicile_1 = st.number_input("Buts marqu√©s √† domicile", min_value=0.0, max_value=10.0, step=0.1)
buts_encaisse_domicile_1 = st.number_input("Buts encaiss√©s √† domicile", min_value=0.0, max_value=10.0, step=0.1)
tirs_domicile_1 = st.number_input("Tirs tent√©s √† domicile", min_value=0, max_value=30, step=1)
tirs_cadres_domicile_1 = st.number_input("Tirs cadr√©s √† domicile", min_value=0, max_value=20, step=1)
possession_domicile_1 = st.slider("Possession moyenne √† domicile (%)", 0, 100, 50)
fautes_domicile_1 = st.number_input("Fautes commises √† domicile", min_value=0, max_value=30, step=1)
cartons_domicile_1 = st.number_input("Cartons jaunes re√ßus √† domicile", min_value=0, max_value=10, step=1)
duels_gagnes_domicile_1 = st.number_input("Duels gagn√©s √† domicile", min_value=0, max_value=50, step=1)
interceptions_domicile_1 = st.number_input("Interceptions √† domicile", min_value=0, max_value=30, step=1)
tirs_subis_domicile_1 = st.number_input("Tirs subis √† domicile", min_value=0, max_value=30, step=1)
cartons_rouges_domicile_1 = st.number_input("Cartons rouges √† domicile", min_value=0, max_value=5, step=1)

# Performance √† l'ext√©rieur
st.markdown("### ‚úàÔ∏è Performance √† l'ext√©rieur (√âquipe en d√©placement)")
buts_exterieur_2 = st.number_input("Buts marqu√©s √† l'ext√©rieur", min_value=0.0, max_value=10.0, step=0.1)
buts_encaisse_exterieur_2 = st.number_input("Buts encaiss√©s √† l'ext√©rieur", min_value=0.0, max_value=10.0, step=0.1)
tirs_exterieur_2 = st.number_input("Tirs tent√©s √† l'ext√©rieur", min_value=0, max_value=30, step=1)
tirs_cadres_exterieur_2 = st.number_input("Tirs cadr√©s √† l'ext√©rieur", min_value=0, max_value=20, step=1)
possession_exterieur_2 = st.slider("Possession moyenne √† l'ext√©rieur (%)", 0, 100, 50)
fautes_exterieur_2 = st.number_input("Fautes commises √† l'ext√©rieur", min_value=0, max_value=30, step=1)
cartons_exterieur_2 = st.number_input("Cartons jaunes re√ßus √† l'ext√©rieur", min_value=0, max_value=10, step=1)
duels_gagnes_exterieur_2 = st.number_input("Duels gagn√©s √† l'ext√©rieur", min_value=0, max_value=50, step=1)
interceptions_exterieur_2 = st.number_input("Interceptions √† l'ext√©rieur", min_value=0, max_value=30, step=1)
tirs_subis_exterieur_2 = st.number_input("Tirs subis √† l'ext√©rieur", min_value=0, max_value=30, step=1)
cartons_rouges_exterieur_2 = st.number_input("Cartons rouges √† l'ext√©rieur", min_value=0, max_value=5, step=1)

# Bouton de pr√©diction
if st.button("Lancer la pr√©diction"):
    st.subheader("üì¢ R√©sultat de la pr√©diction")
    st.write("üèÜ **R√©sultat du match** : (Pr√©diction √† int√©grer)")
